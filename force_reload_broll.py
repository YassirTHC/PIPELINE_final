#!/usr/bin/env python3
"""
Force Reload du Module B-roll Selector
R√©sout le probl√®me d'import en for√ßant le rechargement
"""

import sys
import importlib

def force_reload_broll_selector():
    """Force le rechargement du module broll_selector"""
    print("üöÄ FORCE RELOAD DU MODULE B-ROLL SELECTOR")
    print("=" * 60)
    
    try:
        # 1. V√©rifier si le module est d√©j√† charg√©
        if 'broll_selector' in sys.modules:
            print("üîç Module broll_selector d√©j√† charg√© dans sys.modules")
            print(f"   üìç Emplacement: {sys.modules['broll_selector']}")
            
            # 2. Supprimer le module du cache
            del sys.modules['broll_selector']
            print("   ‚úÖ Module supprim√© du cache sys.modules")
        
        # 3. Forcer le rechargement
        print("\nüîÑ Rechargement forc√© du module...")
        import broll_selector
        importlib.reload(broll_selector)
        print("   ‚úÖ Module recharg√© avec succ√®s")
        
        # 4. V√©rifier que la fonction est disponible
        selector = broll_selector.BrollSelector()
        if hasattr(selector, 'find_broll_matches'):
            print("   ‚úÖ Fonction find_broll_matches disponible apr√®s rechargement")
            
            # 5. Test de la fonction
            test_keywords = ["healthcare", "family", "community"]
            matches = selector.find_broll_matches(test_keywords, domain="health")
            print(f"   ‚úÖ Fonction test√©e avec succ√®s: {len(matches)} r√©sultats")
            
        else:
            print("   ‚ùå Fonction find_broll_matches toujours manquante")
            return False
        
        # 6. V√©rifier l'int√©gration avec video_processor
        print("\nüîç Test d'int√©gration avec video_processor...")
        try:
            # Forcer le rechargement de video_processor aussi
            if 'video_processor' in sys.modules:
                del sys.modules['video_processor']
                print("   ‚úÖ video_processor supprim√© du cache")
            
            import video_processor
            print("   ‚úÖ video_processor recharg√©")
            
            if hasattr(video_processor, 'BROLL_SELECTOR_AVAILABLE'):
                print(f"   ‚úÖ BROLL_SELECTOR_AVAILABLE: {video_processor.BROLL_SELECTOR_AVAILABLE}")
            else:
                print("   ‚ùå BROLL_SELECTOR_AVAILABLE manquant")
                
        except Exception as e:
            print(f"   ‚ùå Erreur rechargement video_processor: {e}")
            return False
        
        print("\n" + "=" * 60)
        print("üéâ RELOAD FORC√â R√âUSSI !")
        print("=" * 60)
        print("‚úÖ Module broll_selector recharg√©")
        print("‚úÖ Fonction find_broll_matches disponible")
        print("‚úÖ Int√©gration avec video_processor valid√©e")
        print("üöÄ Le pipeline peut maintenant utiliser le nouveau s√©lecteur")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå Erreur lors du reload forc√©: {e}")
        return False

if __name__ == "__main__":
    success = force_reload_broll_selector()
    exit(0 if success else 1) 